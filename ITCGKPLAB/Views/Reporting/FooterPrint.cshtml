@model FooterViewModel
@inject IConfiguration _configuration;
@{
	Layout = null;//(int)((await userManager.GetUserAsync(User)).CompanyDetailId)
	string domainname = _configuration.GetSection("Application:AppDomain").Value + "PatientReport-Print?id=";
}
<!DOCTYPE html>
<html>

<head>
	<style>
		* {
			font-family: Arial, Helvetica, sans-serif;
		}

		img {
			margin-right: 5px;
			width: 100%;
		}

		footer {
			border-top: 0px solid #ccc;
			padding: 10px;
			text-align: center;
		}

		div.relative {
			position: relative;
			width: 100%;
		}

		div.absolute1 {
			position: absolute;
			left: 0;
			width: 20%;
		}

		div.absolute2 {
			position: absolute;
			left: 20%;
			width: 10%;
		}

		div.absolute3 {
			position: absolute;
			left: 35%;
			width: 20%;
		}
		div.absolute4 {
			position: absolute;
			left:55%;
			width: 20%;
		}		
		div.absolute5 {
			position: absolute;
			right: 0;
			width: 20%;
		}
	</style>
</head>

<body onload="subst()">
	<footer>
		<div class="relative">
			<div class="absolute1"><img src="/CenterSignatureLeft/@Model.SigLeft" height="55"></div>
			<div class="absolute2" style="margin-top:0px;text-align:left;">
				@if (Model.QRCodePrint)
				{
					<qrcode content="@(domainname + Model.VNo)" alt="" />
				}
			</div>

			<div class="absolute3"><img src="/CenterSignature/@Model.SigCenter" height="55"></div>
			<div style="text-align:left;margin-top:10px;" class="absolute4">
				@if (Model.BarCodePrint)
				{
					@if (!Model.BarCodeTopTrue)
					{
						<span><barcode content="@Model.VNo" height="25" width="200" /></span>
					}
				}
			</div>
			<div class="absolute5"><img src="/CenterLogo/@Model.SigRight" height="55"></div>
		</div>
		@if (Model.FooterImagesTrueFalse)
		{
			<div class="relative" style="top:60px;">
				<img src="/CenterFooter/@Model.FooterImages" height="55">
				<!--Page <span class="page"></span> of <span class="topage"></span>-->
			</div>
		}

	</footer>
	<script>
	//As documented here https://wkhtmltopdf.org/usage/wkhtmltopdf.txt
		function subst() {
			var vars = {};
			var query_strings_from_url = document.location.search.substring(1).split('&');
			for (var query_string in query_strings_from_url) {
				if (query_strings_from_url.hasOwnProperty(query_string)) {
					var temp_var = query_strings_from_url[query_string].split('=', 2);
					vars[temp_var[0]] = decodeURI(temp_var[1]);
				}
			}
			var css_selector_classes = ['page', 'frompage', 'topage', 'webpage', 'section', 'subsection', 'date', 'isodate', 'time', 'title', 'doctitle', 'sitepage', 'sitepages'];
			for (var css_class in css_selector_classes) {
				if (css_selector_classes.hasOwnProperty(css_class)) {
					var element = document.getElementsByClassName(css_selector_classes[css_class]);
					for (var j = 0; j < element.length; ++j) {
						element[j].textContent = vars[css_selector_classes[css_class]];
					}
				}
			}
		}</script>
</body>

</html>