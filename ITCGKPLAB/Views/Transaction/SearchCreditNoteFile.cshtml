@model OpenSearchViewModel
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> userManager;
@inject ISettingRepository _repository;
@inject ITransactionRepository _Irepository;
@inject IAuthorizationService authorizationService;
@inject Microsoft.Extensions.Options.IOptionsSnapshot<SoftwareConfigMode> softwareoption;
@{
	var softwareheader = softwareoption.Value;
	ViewData["Title"] = "Search Credit Note File";
	string userid = ((await userManager.GetUserAsync(User)).Id);
	var userdetails = userManager.Users.Where(x => x.Id == userid).ToList();
	List<SaleRViewModel> listItem = await _Irepository.SearchSaleReturnFileDateWise(Model.CompId, Model.UserId, Model.InvoiceNo, Model.CustomerName, Model.FatherName, Model.TotalAmt, Model.DiscAmt, Model.CashAmt, Model.FromDate, Model.UptoDate);
}
<div class="CustomBorderRelative">
	<div class="CustomBorder1">
		<form asp-action="SearchCreditNoteFile" asp-controller="Transaction" method="post" autocomplete="off">
			@*<input asp-for="UserId" class="form-control" value="@((await userManager.GetUserAsync(User)).Id)" hidden />*@
			<div class="form-row">
				<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
					<div class="form-group row">
						<div class="col-12 col-sm-12 col-md-2 col-lg-2 col-xl-2">
							@if (!softwareheader.SoftwareMode)
							{
								@if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
								{
									<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany(0)).OrderBy(x => x.Id).Select(x => new SelectListItem() { Text = x.Id.ToString() + ' ' + x.CompName + ' ' + x.Address1, Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
										<option value="0">ALL</option>
									</select>
								}
								else
								{
									<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany((int)((await userManager.GetUserAsync(User)).CompanyDetailId))).OrderBy(x => x.Id).Select(x => new SelectListItem() { Text = x.Id.ToString() + ' ' + x.CompName + ' ' + x.Address1, Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
									</select>
								}
							}
							else
							{
								@if (User.IsInRole("SuperAdmin"))
								{
									<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany(0)).OrderBy(x => x.TransCode).Select(x => new SelectListItem() { Text = x.TransCode + ' ' + x.CompName + ' ' + x.Address1, Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
										<option value="0">ALL</option>
									</select>
								}
								else
								{
									<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany((int)((await userManager.GetUserAsync(User)).CompanyDetailId))).OrderBy(x => x.TransCode).Select(x => new SelectListItem() { Text = x.TransCode + ' ' + x.CompName + ' ' + x.Address1, Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
									</select>
								}
							}
						</div>
						<div class="col-12 col-sm-12 col-md-2 col-lg-2 col-xl-2">
							@if (User.IsInRole("SuperAdmin"))
							{
								<select asp-for="UserId" asp-items="(userManager.Users.Select(x => new SelectListItem() { Text = x.UserName,Value = x.Id.ToString() }))" class="form-control  selectedItems" title="User's Name'">
									<option value="0">ALL</option>
								</select>
							}
							else
							{
								if (User.IsInRole("Admin") || User.IsInRole("Manager"))
								{
									<select asp-for="UserId" asp-items="(userManager.Users.Where(x => x.CompanyDetailId == Model.CompId).Select(x => new SelectListItem() {Text = x.UserName,Value = x.Id.ToString() }))" class="form-control  selectedItems" title="User's Name'">
										<option value="0">ALL</option>
									</select>
								}
								else
								{
									<select asp-for="UserId" asp-items="(userdetails.Select(x => new SelectListItem() {Text = x.UserName,Value = x.Id.ToString() }))" class="form-control  selectedItems" title="User's Name'">
									</select>
								}
							}
						</div>
						<div class="col-12 col-sm-12 col-md-2 col-lg-2 col-xl-2">
							<input asp-for="FromDate" class="form-control " title="From Date" />
						</div>
						<div class="col-12 col-sm-12 col-md-2 col-lg-2 col-xl-2">
							<input asp-for="UptoDate" class="form-control " title="Upto Date" />
						</div>
						<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
							<input asp-for="InvoiceNo" class="form-control " title="Invoice No." placeholder="Search Invoice No." />
						</div>
					</div>
					<div class="form-group row ">
						<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
							<input asp-for="CustomerName" class="form-control " title="A/c Name" placeholder="Search Customer's Name" />
						</div>
						<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
							<input asp-for="FatherName" class="form-control " title="Address" placeholder="Search Customer's Address" />
						</div>
						<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
							<div class="form-group row">
								<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
									<input asp-for="TotalAmt" class="form-control  text-right" onkeypress="return OnlyNumber(event)" onblur="ConvertTwoDecimal(this);" title="Total Amt." />
								</div>
								<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
									<input asp-for="DiscAmt" class="form-control  text-right" onkeypress="return OnlyNumber(event)" onblur="ConvertTwoDecimal(this);" title="Discount Amt." />
								</div>
								<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
									<input asp-for="CashAmt" class="form-control  text-right" onkeypress="return OnlyNumber(event)" onblur="ConvertTwoDecimal(this);" title="Grand Amount" />
								</div>
							</div>
						</div>
					</div>
					<div class="form-group row CustLabel">
						<div class="col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6">
							<label>Total : <span class="text-danger">@listItem.Sum(x => x.TotalAmt)</span></label>
							<label>Disc. : <span class="text-danger">@listItem.Sum(x => x.DiscAmt)</span></label>
							<label>Net Amt : <span class="text-danger">@listItem.Sum(x => x.NetAmt)</span></label>
						</div>
						<div class="col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 text-right ">
							<label>Rcd: <span class="text-danger">@listItem.Count</span></label>
						</div>
						<div class="col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 text-sm-right">
							<input type="submit" value="Search" class="btn btn-success btn-sm " style="width:auto;" />
							<a asp-action="CreateCreditNoteFile" asp-controller="Transaction" asp-route-id="0" asp-route-isSuccess="false" class="btn btn-warning btn-sm" style="width:auto;">Add New</a>
							<a asp-action="Index" asp-controller="Home" class="btn btn-outline-info  btn-sm">Cancel</a>
						</div>
					</div>
				</div>
			</div>
		</form>
		<div class="stateScroll" id="PurchaseFileTable1">
			<table class="table  table-striped table-bordered table-hover table-responsive-sm OpenItemOrderVouch" title="Credit Note File Search Records">
				<thead class="RedDarkWhiteListHeader">
					<tr>
						<th class="wdp-5" hidden>
							Id
						</th>
						<th class="wdp-5">
							User
						</th>
						<th class="wdp-7">
							Branch
						</th>
						<th class="wdp-4">
							SrNo.
						</th>
						<th class="wdp-4">
							Date
						</th>
						<th>
							Patient's Name
						</th>
						<th>
							Address
						</th>
						<th class="text-right wdp-7">
							Total
						</th>
						<th class="text-right wdp-7">
							Disc.
						</th>
						<th class="text-right wdp-7">
							Net Amt.
						</th>
						<th style="text-align:center;" class="wdp-8">
							Action
						</th>
					</tr>
				</thead>
				<tbody>
					@if (listItem.Any())
					{
						@foreach (var item in listItem)
						{
							<tr>
								<td hidden>
									@item.SRId
								</td>
								<td class="wdp-5">
									@userManager.Users.Where(x => x.Id == item.UserCode).Select(x => x.UserName.Substring(0, 8).ToUpper()).FirstOrDefault()
								</td>
								<td>
									@(item.CompanyDetailViewModel.TransCode)
								</td>
								<td>
									@(item.SRVNo)
								</td>
								<td>
									@item.SDate
								</td>
								<td>
									@item.CustName
								</td>
								<td>
									@item.CustAddress1
								</td>
								<td class="text-right">
									@item.TotalAmt
								</td>
								<td class="text-right">
									@item.DiscAmt
								</td>
								<td class="text-right">
									@item.NetAmt
								</td>
								<td class="text-center">
									@if ((await authorizationService.AuthorizeAsync(User, "CreditNoteBillPrintFilePolicy")).Succeeded)
									{
										<a asp-action="CreditNoteBillPrint" asp-controller="Reporting" asp-route-id="@item.SRId" target="_blank" title="Credit Note Bill Print"><span><i class="fa fa-print mr-3 fa-1x icon-color-white"></i></span></a>
									}
									@if ((await authorizationService.AuthorizeAsync(User, "AddEditCreditNotePolicy")).Succeeded)
									{
										<a asp-action="CreateCreditNoteFile" asp-controller="Transaction" asp-route-id=@item.SRId title="Edit"><span><i class="far fa-edit mr-3 fa-1x icon-color-green"></i></span></a>
									}
									@if ((await authorizationService.AuthorizeAsync(User, "DeleteCreditNotePolicy")).Succeeded)
									{
										<a asp-action="DeleteCreditNoteFileRecord" asp-controller="Transaction" asp-route-id=@item.SRId title="Delete" onclick="return confirm ('Are you sure you want to delete record : @item.SRId')"><i class="fas fa-times fa-1x icon-color-red"></i></a>
									}
								</td>
							</tr>
						}
					}
					else
					{
						<tr title="Credit Note File Search Records">
							<td colspan="11">
								@if (Model.SearchRecordFinder == "Yes")
								{
									<h3 class="text-danger text-center">No Record found......</h3>
								}
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
</div>
@section scripts {
	<script>
		$('#PurchaseFileTable1').height(screen.height - 290);
	</script>
}