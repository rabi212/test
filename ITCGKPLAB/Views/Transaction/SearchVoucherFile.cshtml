@model OpenSearchViewModel
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> userManager;
@inject ISettingRepository _repository;
@inject ITransactionRepository _trepository;
@inject IAuthorizationService authorizationService;
@inject Microsoft.Extensions.Options.IOptionsSnapshot<SoftwareConfigMode> softwareoption;
@{
	var softwareheader = softwareoption.Value;
	ViewData["Title"] = "Search Voucher File";
	string userid = ((await userManager.GetUserAsync(User)).Id);
	var userdetails = userManager.Users.Where(x => x.Id == userid).ToList();
	List<VoucherViewModel> listItem = await _trepository.SearchVoucherDateWise(Model.CompId, Model.UserId, Model.VoucherType, Model.TotalAmt, Model.CashAmt, Model.FromDate, Model.UptoDate);
}
<div class="CustomBorderRelative">
	<div class="CustomBorder1">
		<form asp-action="SearchVoucherFile" asp-controller="Transaction" method="post" autocomplete="off">
			@*<input asp-for="UserId" class="form-control" value="@((await userManager.GetUserAsync(User)).Id)" hidden />*@
			<div class="form-row">
				<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
					<div class="form-group row">
						<div class="col-12 col-sm-12 col-md-6 col-lg-3 col-xl-3">
							@if (!softwareheader.SoftwareMode)
							{
								@if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
								{
									<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany(0)).OrderBy(x=> x.Id).Select(x=> new SelectListItem() { Text = x.Id.ToString() + ' ' + x.CompName + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
										<option value="0">ALL</option>
									</select>
								}
								else
								{
									<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany((int)((await userManager.GetUserAsync(User)).CompanyDetailId))).OrderBy(x => x.Id).Select(x => new SelectListItem() { Text = x.Id.ToString() + ' ' + x.CompName + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
									</select>
								}
							}
							else
							{
								@if (User.IsInRole("SuperAdmin"))
								{
									<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany(0)).OrderBy(x => x.TransCode).Select(x => new SelectListItem() { Text = x.TransCode + ' ' + x.CompName + ' ' + x.Address1, Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
										<option value="0">ALL</option>
									</select>
								}
								else
								{
									<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany((int)((await userManager.GetUserAsync(User)).CompanyDetailId))).OrderBy(x => x.TransCode).Select(x => new SelectListItem() { Text = x.TransCode + ' ' + x.CompName + ' ' + x.Address1, Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
									</select>
								}
							}
						</div>
						<div class="col-12 col-sm-12 col-md-6 col-lg-3 col-xl-3">
							@if (User.IsInRole("SuperAdmin"))
							{
								<select asp-for="UserId" asp-items="(userManager.Users.Select(x => new SelectListItem() { Text = x.UserName,Value = x.Id.ToString() }))" class="form-control  selectedItems" title="User's Name'">
									<option value="0">ALL</option>
								</select>
							}
							else
							{
								if (User.IsInRole("Admin") || User.IsInRole("Manager"))
								{
									<select asp-for="UserId" asp-items="(userManager.Users.Where(x => x.CompanyDetailId == Model.CompId).Select(x => new SelectListItem() {Text = x.UserName,Value = x.Id.ToString() }))" class="form-control  selectedItems" title="User's Name'">
										<option value="0">ALL</option>
									</select>
								}
								else
								{
									<select asp-for="UserId" asp-items="(userdetails.Select(x => new SelectListItem() {Text = x.UserName,Value = x.Id.ToString() }))" class="form-control  selectedItems" title="User's Name'">
									</select>
								}
							}
						</div>
						<label asp-for="FromDate" class="col-12 col-sm-12 col-md-3 col-lg-1 col-xl-1 col-form-label  text-md-right"></label>
						<div class="col-12 col-sm-12 col-md-3 col-lg-2 col-xl-2">
							<input asp-for="FromDate" class="form-control " />
						</div>
						<label asp-for="UptoDate" class="col-12 col-sm-12 col-md-3 col-lg-1 col-xl-1 col-form-label  text-md-right"></label>
						<div class="col-12 col-sm-12 col-md-3 col-lg-2 col-xl-2">
							<input asp-for="UptoDate" class="form-control " />
						</div>
					</div>
					<div class="form-group row">
						<input asp-for="VoucherType" class="form-control  CustomText" placeholder="Voucher Type" value="@ViewBag.VoucherType" hidden />
						<div class="col-12 col-sm-12 col-md-4 col-lg-3 col-xl-3 CustLabel">
							<h5><label id="VoucherTypeX" class="col-form-label text-success"></label></h5>
						</div>

						<div class="col-12 col-sm-12 col-md-4 col-lg-3 col-xl-3">
							<input asp-for="TotalAmt" class="form-control  CustomText text-right" title="Cr Amount" onblur="ConvertTwoDecimal(this)" />
						</div>
						<div class="col-12 col-sm-12 col-md-4 col-lg-3 col-xl-3">
							<input asp-for="CashAmt" class="form-control  CustomText text-right" title="Dr Amount" onblur="ConvertTwoDecimal(this)" />
						</div>

					</div>
				</div>
				<div class="col-12 col-sm-12 col-md-8 col-lg-8 col-xl-8 logofont CustLabel">
					<label>Record : <span class="text-danger">@listItem.Count</span></label>
					<label>Credit Amt. : <span class="text-danger">@(listItem.Sum(x => x.CrAmt))</span></label>
					<label>Debit  Amt. : <span class="text-danger">@(listItem.Sum(x => x.DrAmt))</span></label>
				</div>
				<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 text-sm-right CustLabel">
					<input type="submit" value="Search" class="btn btn-success btn-sm " style="width:auto;" />
					@if (Model.VoucherType == "Payment")
					{
						<a asp-action="CreateCashPaymentFile" asp-controller="Transaction" asp-route-id="0" asp-route-isSuccess="false" class="btn btn-warning btn-sm" style="width:auto;">Add New</a>
					}
					else if (Model.VoucherType == "Receipt")
					{
						<a asp-action="CreateCashReciptFile" asp-controller="Transaction" asp-route-id="0" asp-route-isSuccess="false" class="btn btn-warning btn-sm" style="width:auto;">Add New</a>
					}
					else if (Model.VoucherType == "Bank Payment")
					{
						<a asp-action="CreateBankPaymentFile" asp-controller="Transaction" asp-route-id="0" asp-route-isSuccess="false" class="btn btn-warning btn-sm" style="width:auto;">Add New</a>
					}
					else if (Model.VoucherType == "Bank Receipt")
					{
						<a asp-action="CreateBankReciptFile" asp-controller="Transaction" asp-route-id="0" asp-route-isSuccess="false" class="btn btn-warning btn-sm" style="width:auto;">Add New</a>
					}
					<a asp-action="Index" asp-controller="Home" class="btn btn-outline-info  btn-sm">Cancel</a>
				</div>
			</div>
		</form>
		<div class="stateScroll" id="SaleItemMasterlistTable1">
			<table class="table table-striped table-bordered table-hover table-responsive-sm OpenItemOrderVouch" title="Voucher Search Records">
				<thead class="RedDarkWhiteListHeader">
					<tr>
						<th class="wdp-5">
							Id
						</th>
						<th class="wdp-10">
							User's Name
						</th>
						<th class="wdp-10">
							Branch's Name
						</th>
						<th class="wdp-10">
							Vouch.Type
						</th>
						<th class="wdp-5">
							V.No.
						</th>
						<th class="wdp-5">
							Date
						</th>
						<th class="text-right wdp-8">
							Credit Amt.
						</th>
						<th class="text-right wdp-8">
							Debit Amt.
						</th>
						<th style="text-align:center;" class="wdp-8">
							Action
						</th>
					</tr>
				</thead>
				<tbody>
					@if (listItem.Any())
					{
						@foreach (var item in listItem)
						{
							<tr >
								<td>
									@item.VId
								</td>
								<td>
									@((await userManager.FindByIdAsync(item.UserCode)).UserName.Substring(0,8).ToUpper())
								</td>
								<td>
									@item.VCompanyDetails.TransCode
								</td>
								<td>
									@item.VType
								</td>
								<td>
									@item.VVNo
								</td>
								<td>
									@item.VDate
								</td>
								<td class="text-right">
									@item.CrAmt
								</td>
								<td class="text-right">
									@item.DrAmt
								</td>
								<td class="text-center">
									@if (Model.VoucherType == "Receipt")
									{
										@if ((await authorizationService.AuthorizeAsync(User, "CashReciptBillPrintFilePolicy")).Succeeded)
										{
											<a asp-action="CashReciptBillPrint" asp-controller="Reporting" asp-route-id="@item.VId" target="_blank" title="Print"><span><i class="fa fa-print mr-3 fa-1x icon-color-white"></i></span></a>
										}
										@if ((await authorizationService.AuthorizeAsync(User, "AddEditCashReciptFilePolicy")).Succeeded)
										{
											<a asp-action="CreateCashReciptFile" asp-controller="Transaction" asp-route-id=@item.VId title="Edit"><span><i class="far fa-edit mr-3 fa-1x icon-color-green"></i></span></a>
										}
										@if ((await authorizationService.AuthorizeAsync(User, "DeleteCashReciptFilePolicy")).Succeeded)
										{
											<a asp-action="DeleteCashReciptFile" asp-controller="Transaction" asp-route-id=@item.VId asp-route-vouchertype="Receipt" title="Delete" onclick="return confirm ('Are you sure you want to delete record : @item.VId')"><i class="fas fa-times fa-1x icon-color-red"></i></a>
										}
									}
									else if (Model.VoucherType == "Payment")
									{
										@if ((await authorizationService.AuthorizeAsync(User, "CashPaymentBillPrintFilePolicy")).Succeeded)
										{
											<a asp-action="CashReciptBillPrint" asp-controller="Reporting" asp-route-id="@item.VId" target="_blank" title="Print"><span><i class="fa fa-print mr-3 fa-1x icon-color-white"></i></span></a>
										}
										@if ((await authorizationService.AuthorizeAsync(User, "AddEditCashPaymentFilePolicy")).Succeeded)
										{
											<a asp-action="CreateCashPaymentFile" asp-controller="Transaction" asp-route-id=@item.VId title="Edit"><span><i class="far fa-edit mr-3 fa-1x icon-color-green"></i></span></a>
										}
										@if ((await authorizationService.AuthorizeAsync(User, "DeleteCashPaymentFilePolicy")).Succeeded)
										{
											<a asp-action="DeleteCashPaymentFile" asp-controller="Transaction" asp-route-id=@item.VId asp-route-vouchertype="Payment" title="Delete" onclick="return confirm ('Are you sure you want to delete record : @item.VId')"><i class="fas fa-times fa-1x icon-color-red"></i></a>
										}
									}
									else if (Model.VoucherType == "Bank Payment")
									{
										@if ((await authorizationService.AuthorizeAsync(User, "BankPaymentBillPrintFilePolicy")).Succeeded)
										{
											<a asp-action="CashReciptBillPrint" asp-controller="Reporting" asp-route-id="@item.VId" target="_blank" title="Print"><span><i class="fa fa-print mr-3 fa-1x icon-color-white"></i></span></a>
										}
										@if ((await authorizationService.AuthorizeAsync(User, "AddEditBankPaymentFilePolicy")).Succeeded)
										{
											<a asp-action="CreateBankPaymentFile" asp-controller="Transaction" asp-route-id=@item.VId title="Edit"><span><i class="far fa-edit mr-3 fa-1x icon-color-green"></i></span></a>
										}
										@if ((await authorizationService.AuthorizeAsync(User, "DeleteBankPaymentFilePolicy")).Succeeded)
										{
											<a asp-action="DeleteBankPaymentFile" asp-controller="Transaction" asp-route-id=@item.VId asp-route-vouchertype="Bank Payment" title="Delete" onclick="return confirm ('Are you sure you want to delete record : @item.VId')"><i class="fas fa-times fa-1x icon-color-red"></i></a>
										}
									}
									else if (Model.VoucherType == "Bank Receipt")
									{
										@if ((await authorizationService.AuthorizeAsync(User, "BankReciptBillPrintFilePolicy")).Succeeded)
										{
											<a asp-action="CashReciptBillPrint" asp-controller="Reporting" asp-route-id="@item.VId" target="_blank" title="Print"><span><i class="fa fa-print mr-3 fa-1x icon-color-white"></i></span></a>
										}
										@if ((await authorizationService.AuthorizeAsync(User, "AddEditBankReciptFilePolicy")).Succeeded)
										{
											<a asp-action="CreateBankReciptFile" asp-controller="Transaction" asp-route-id=@item.VId title="Edit"><span><i class="far fa-edit mr-3 fa-1x icon-color-green"></i></span></a>
										}
										@if ((await authorizationService.AuthorizeAsync(User, "DeleteBankReciptFilePolicy")).Succeeded)
										{
											<a asp-action="DeleteBankReciptFile" asp-controller="Transaction" asp-route-id=@item.VId asp-route-vouchertype="Bank Receipt" title="Delete" onclick="return confirm ('Are you sure you want to delete record : @item.VId')"><i class="fas fa-times fa-1x icon-color-red"></i></a>
										}
									}
								</td>
							</tr>
						}
					}
					else
					{
						<tr title="Voucher Search Records">
							<td colspan="11">
								@if (Model.SearchRecordFinder == "Yes")
								{
									<h3 class="text-danger text-center">No Record found......</h3>
								}
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
</div>
@section scripts {
	<script>
		$('#SaleItemMasterlistTable1').height(screen.height - 260);
		$('#VoucherTypeX').text($('#VoucherType').val() + " Voucher Search");
	</script>
}