@model OpenSearchViewModel
@inject ISettingRepository _repository;
@inject IMasterRepository _mrepository;
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> userManager;
@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> signInManager;
@inject Microsoft.Extensions.Options.IOptionsSnapshot<SoftwareConfigMode> softwareoption
@inject IAuthorizationService authorizationService;
@{
	ViewData["Title"] = "Home Page";
	var softwareheader = softwareoption.Value;
	decimal totalamt = 0; decimal discamt = 0; decimal paidamt = 0; decimal balamt = 0;
	string userid = signInManager.IsSignedIn(User) ? ((await userManager.GetUserAsync(User)).Id) : "";
	var userdetails = userManager.Users.Where(x => x.Id == userid).ToList();
	var userdetailsx = userManager.Users.Where(x => x.Id == userid).FirstOrDefault();
	var paidclass = "";
	List<UploadPhotoFrontViewModel> detailViewModels = await _repository.GetAllUploadPhotoFileFront();
	CompanyDetailViewModel companyDetail = await _repository.GetCompanyById(User.Identity.IsAuthenticated ? (int)(await userManager.GetUserAsync(User)).CompanyDetailId : 1);
	List<PatientViewModel> detailViewModelsx = signInManager.IsSignedIn(User) ? await _mrepository.GetAllPatientMasterName(Model.CompId, Model.UserId, Model.MobileNo, Convert.ToInt32(Model.sex), Model.TestGroupName, Model.CustomerName, Model.Age, Model.Address, Model.EmailAddress, Model.DoctorId, Model.FromDate, Model.UptoDate, Model.PaymentType, Model.PaymentMode,Model.TestDoctorId,Model.SearchDate,Model.ClientId) : new List<PatientViewModel>();
}
@if (!User.Identity.IsAuthenticated)
{
	<div id="carouselExampleInterval" class="carousel slide" data-ride="carousel">
		<div class="carousel-inner">
			<div class="carousel-item active" data-interval="10000">
				<img src="~/images/ShopNo1.jpg" class="d-block w-100" alt="..." height="300" asp-append-version="true">				
			</div>
			<div class="carousel-item" data-interval="2000">
				<img src="~/images/ShopNo2.JPG" class="d-block w-100" alt="..." height="300" asp-append-version="true">
			</div>
			<div class="carousel-item">
				<img src="~/images/ShopNo3.JPG" class="d-block w-100" alt="..." height="300" asp-append-version="true">
			</div>
			<div class="carousel-item">
				<img src="~/images/ShopNo4.jpg" class="d-block w-100" alt="..." height="300" asp-append-version="true">
			</div>
		</div>
		<a class="carousel-control-prev" href="#carouselExampleInterval" role="button" data-slide="prev">
			<span class="carousel-control-prev-icon" aria-hidden="true"></span>
			<span class="sr-only">Previous</span>
		</a>
		<a class="carousel-control-next" href="#carouselExampleInterval" role="button" data-slide="next">
			<span class="carousel-control-next-icon" aria-hidden="true"></span>
			<span class="sr-only">Next</span>
		</a>
	</div>
	<div class="container-fluid row imgflex">
		<div class="col-md-12 imgtxt-top">
			<marquee behavior="scroll">
				<h3 style="color:darkmagenta;"><strong><b style="font-style:italic;">WELCOME TO ITC GORAKHPUR LAB TECHNOLOGY</b></strong></h3>
				@*<h3 style="color:darkmagenta;"><strong><b style="font-style:italic;">WELCOME TO @companyDetail.CompName.ToUpper()  @companyDetail.Address1.ToUpper() </b></strong></h3>*@
			</marquee>
		</div>
	</div>

	<section class="mb-3 mt-3">
		<div class="container px-4 px-md-5">
			<div class="row">
				<div class="col-12 text-justify font-italic">
					<h3 class="dark-grey-txt">
						Have you ever wondered what happens with the samples of body tissue or
						fluid your health care provider takes from you? How does that process help determine your
						diagnosis and inform treatment options?
					</h3>
					<h3 class="dark-grey-txt">
						Our health care system relies on diagnostic testing to guide care teams and
						help patients make the best decisions about their care. Behind the scenes, pathologists lead the
						laboratories and examine the samples and specimens that discover the root causes of patients’
						illnesses.
					</h3>
				</div>
			</div>
		</div>
	</section>

	<div class="py-5 bg-light">
		<div class="container-fluid">
			<div class="row">
				@foreach (var item in detailViewModels)
				{
					<div class="col-md-3">
						<partial name="_displayimages" model="@item" />
					</div>
				}
				@*<partial name="_DisplayImages.cshtml" model="@book" />*@
			</div>
		</div>
	</div>
}
else
{
	<div class="CustomBorderRelative"> 
		<div class="CustomBorder1">
			<form asp-action="Index" asp-controller="Home" method="post" autocomplete="off">				
				@*<input asp-for="UserId" class="form-control" value="@((await userManager.GetUserAsync(User)).Id)" hidden />*@
				<div class="form-row">
					<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
						<div class="form-group row">
							<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
								@if (!softwareheader.SoftwareMode)
								{
									@if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
									{
										<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany(0)).OrderBy(x=> x.Id).Select(x=> new SelectListItem() { Text = x.Id.ToString() + ' ' + x.CompName + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
											<option value="0">ALL</option>
										</select>
									}
									else
									{
										<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany((int)((await userManager.GetUserAsync(User)).CompanyDetailId))).OrderBy(x => x.Id).Select(x => new SelectListItem() { Text = x.Id.ToString() + ' ' + x.CompName + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
										</select>
									}
								}
								else
								{
									@if (User.IsInRole("SuperAdmin"))
									{
										<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany(0)).OrderBy(x=> x.TransCode).Select(x=> new SelectListItem() { Text = x.TransCode + ' ' + x.CompName + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
											<option value="0">ALL</option>
										</select>
									}
									else
									{
										<select asp-for="CompId" asp-items=" (await _repository.GetAllCompany((int)((await userManager.GetUserAsync(User)).CompanyDetailId))).OrderBy(x => x.TransCode).Select(x => new SelectListItem() { Text = x.TransCode + ' ' + x.CompName + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Branch">
										</select>
									}
								}

							</div>
							<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
								@if (User.IsInRole("SuperAdmin"))
								{
									<select asp-for="UserId" asp-items="(userManager.Users.Select(x => new SelectListItem() { Text = x.UserName,Value = x.Id.ToString() }))" class="form-control  selectedItems" title="User's Name'">
										<option value="0">ALL</option>
									</select>
								}
								else
								{
									if (User.IsInRole("Admin") || User.IsInRole("Manager"))
									{
										<select asp-for="UserId" asp-items="(userManager.Users.Where(x => x.CompanyDetailId == Model.CompId).Select(x => new SelectListItem() {Text = x.UserName,Value = x.Id.ToString() }))" class="form-control  selectedItems" title="User's Name'">
											<option value="0">ALL</option>
										</select>
									}
									else
									{
										<select asp-for="UserId" asp-items="(userdetails.Select(x => new SelectListItem() {Text = x.UserName,Value = x.Id.ToString() }))" class="form-control  selectedItems" title="User's Name'">
										</select>
									}
								}
							</div>
							<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
								<input asp-for="FromDate" class="form-control " title="From Date" />
							</div>
							<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
								<input asp-for="UptoDate" class="form-control " title="Upto Date" />
							</div>
							<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
								<input asp-for="CustomerName" class="form-control  " placeholder="Patient's Name" />
							</div>
							<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
								<select asp-for="TestGroupName" asp-items=" (await _mrepository.GetAllTestMaster(softwareheader.SoftwareMode == true ? (int)(await userManager.GetUserAsync(User)).CompanyDetailId : 1)).OrderBy(x=> x.TestCode).Select(x=> new SelectListItem() { Text = x.TestCode, Value = x.TestCode.ToString() })" class="form-control  selectedItems" title="Test Group Type">
									<option value="ALL">ALL</option>
								</select>
							</div>

							<div hidden>
								<input asp-for="PaymentType" class="form-control  " placeholder="Payment Type" />
							</div>
						</div>
						<div class="form-group row">
							<div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6">
								<div class="form-group row">
									<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">
										<input asp-for="MobileNo" class="form-control  CustomText" placeholder="Mobile No." />
									</div>
									<div class="col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1">
										<input asp-for="SearchDate" class="form-control  CustomText" title="Date Wise Search" />
									</div>
									<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
										<input asp-for="Address" class="form-control  CustomText" placeholder="Address" />
									</div>
									<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
										<input asp-for="EmailAddress" class="form-control  CustomText" placeholder="Ref. No." />
									</div>
								</div>
							</div>
							<div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6">
								<div class="form-group row">
									<div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6">
										<select asp-for="DoctorId" asp-items=" (await _mrepository.GetAllDoctorMasterLedger(softwareheader.SoftwareMode == true ? (int)((await userManager.GetUserAsync(User)).CompanyDetailId):1)).OrderBy(x=> x.Name).Select(x=> new SelectListItem() { Text = (x.Name + ' ' + x.Eduction), Value = x.Id.ToString() })" class="form-control  CustomText selectedItems" title="Doctor's Name">
											<option value="0">ALL</option>
										</select>
									</div>
									<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
										<select asp-for="PaymentMode" asp-items="Html.GetEnumSelectList<PayMode>()" class="form-control  CustomText selectedItems" title="Payment type">
											<option value="ALL">ALL</option>
										</select>
									</div>
									<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
										<select asp-for="sex" asp-items="Html.GetEnumSelectList<Gender>()" class="form-control  CustomText selectedItems" title="Gender">
											<option value="3">ALL</option>
										</select>
									</div>
									<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
										<input asp-for="Age" class="form-control  CustomText" title="Search Age" />
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 CustLabel">
						<div class="form-group row">
							<div class="col-12">
								@if (!softwareheader.SoftwareMode)
								{
									@if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
									{
										<select asp-for="ClientId" asp-items=" (await _mrepository.GetAllClient(0)).OrderBy(x=> x.Id).Select(x=> new SelectListItem() { Text = x.Name + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Client's Name">
											<option value="0">ALL</option>
										</select>
									}
									else
									{
										<select asp-for="ClientId" asp-items=" (await _mrepository.GetAllClient((int)((await userManager.GetUserAsync(User)).CompanyDetailId))).OrderBy(x => x.Id).Select(x => new SelectListItem() { Text =  x.Name + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Client's Name">
										</select>
									}
								}
								else
								{
									@if (User.IsInRole("SuperAdmin"))
									{
										<select asp-for="ClientId" asp-items=" (await _mrepository.GetAllClient(0)).OrderBy(x=> x.Id).Select(x=> new SelectListItem() { Text = x.Name + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Client's Name">
											<option value="0">ALL</option>
										</select>
									}
									else if (User.IsInRole("Admin") || User.IsInRole("Manager"))
									{
										<select asp-for="ClientId" asp-items=" (await _mrepository.GetAllClient((int)((await userManager.GetUserAsync(User)).CompanyDetailId))).OrderBy(x => x.Name).Select(x => new SelectListItem() { Text =  x.Name + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Client's Name">
											<option value="0">ALL</option>
										</select>
									}
									else if (User.IsInRole("User"))
									{
										<select asp-for="ClientId" asp-items=" (await _mrepository.GetAllClient((int)((await userManager.GetUserAsync(User)).CompanyDetailId),(int)((await userManager.GetUserAsync(User)).ClientId))).OrderBy(x => x.Name).Select(x => new SelectListItem() { Text =  x.Name + ' '  + x.Address1 , Value = x.Id.ToString() })" class="form-control  selectedItems" title="Client's Name">
										</select>
									}
								}
							</div>
						</div>
					</div>
					<div class="col-12 col-sm-12 col-md-12 col-lg-7 col-xl-7 text-sm CustLabel">
						<div class="form-group row">
							@if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
							{
								<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
									<select asp-for="TestDoctorId" asp-items=" (await _mrepository.GetDoctorMasterLabList(softwareheader.SoftwareMode == true ? (int)(await userManager.GetUserAsync(User)).CompanyDetailId : 1)).OrderBy(x => x.Name).Select(x => new SelectListItem() { Text = x.Name, Value = x.Id.ToString() })" class="form-control  selectedItems" title="Investigation By Doctor Details">
										<option value="0">ALL</option>
									</select>
								</div>
							}
							else
							{
								<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4"></div>

							}
							<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2" onmouseover="FullPaid();">
								<button class="fullpaid"></button>
								<span>Full Paid</span>
							</div>
							<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2" onmouseover="PartialPaid();">
								<button class="partialpaid"></button>
								<span>Partial Paid</span>
							</div>
							<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2" onmouseover="FullyUnpaid();">
								<button class="fullyunpaid"></button>
								<span>Fully Unpaid</span>
							</div>
							<div class="col-12 col-sm-12 col-md-12 col-lg-1 col-xl-2" onmouseover="ReportCancelpaid();">
								<button class="reportCancel"></button>
								<span>Cancel</span>
							</div>
						</div>
					</div>
					<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 text-right CustLabel">
						<a asp-action="ResultSearchRecord" asp-controller="Master" asp-route-search="No" class="btn btn-dark btn-sm" style="width:auto;">New Result</a>
						<input type="submit" value="Search" class="btn btn-success btn-sm " style="width:auto;" onmouseover="Allpaid();" />
						<a asp-action="CreateRegistrationFile" asp-controller="Master" asp-route-id="0" asp-route-isSuccess="false" class="btn btn-warning btn-sm" style="width:auto;">New Patient</a>
					</div>
				</div>
			</form>
			<div class="stateScroll" id="DoctorTable1">
				<table class="table table-striped table-bordered table-hover table-responsive-sm Vouch">
					<thead class="bluevioletWhiteListHeader small">
						<tr>
							<th hidden>
								Id
							</th>
							<th>
								##
							</th>
							<th>##</th>
							<th>
								Date
							</th>
							<th>
								R.No.
							</th>
							<th class="text-center">
								Action
							</th>
							<th>
								User
							</th>
							<th>
								Name
							</th>
							<th>
								Doctor
							</th>
							<th>
								Investigation
							</th>
							<th class="text-right">
								Total
							</th>
							<th class="text-right">
								Disc.
							</th>
							<th class="text-right">
								Paid
							</th>
							<th class="text-right">
								Bal.
							</th>
							<th>
								Cancel
							</th>

						</tr>
					</thead>
					<tbody class="tbodyPatientRecord">
						@if (detailViewModelsx.Count() > 0)
						{
							@foreach (var item in detailViewModelsx)
							{
								totalamt = totalamt + Convert.ToDecimal(item.TotalAmt);
								discamt = discamt + Convert.ToDecimal(item.DiscAmt);
								paidamt = paidamt + Convert.ToDecimal(item.PaidAmt);
								balamt = balamt + Convert.ToDecimal(item.BalAmt);
								paidclass = item.ReportCancel == "True" ? "reportCancelColor" : item.BalAmt == 0 ? "fullpaidColor" : item.BalAmt > 0 && item.PaidAmt > 0 ? "partialpaidColor" : "fullyunpaidColor";
								<tr class=" @paidclass">
									<td hidden>
										@item.Id
										@item.CompId
									</td>
									<td>
										@if (item.ReportDate != null)
										{<img src="~/LoaderIcon/apply.ico" class="imgList" />}
										else
										{ 
											<img src="~/LoaderIcon/Pending.gif" class="imgList" />
										}
									</td>
									<td class="text-center">
										@if (await _mrepository.AuditFileForValid(item.Id))
										{
											<a href="#" onclick="AddEditExpenses(@item.Id)" style="width:auto" title="Edit User Details"><span><i class="far fa-user fa-1x icon-color-blue"></i></span></a>
										}
									</td>
									<td>
										@item.SDate
									</td>
									<td>
										@item.RefNo
									</td>
									<td class="text-center" style="width:10%;">
										<a asp-action="PatientBillPrint" asp-controller="Reporting" asp-route-id="@item.Id" target="_blank" title="Bill Print"><span><i class="fa fa-print mr-3 fa-1x icon-color-blue"></i></span></a>
										<a asp-action="BarcodePrint" asp-controller="Reporting" asp-route-idno="@item.Id" target="_blank" title="Barcode Print"><span><i class="fa fa-print mr-3 fa-1x icon-color-red"></i></span></a>
										@if ((await authorizationService.AuthorizeAsync(User, "AddEditRegistrationPolicy")).Succeeded)
										{
											<a asp-action="CreateRegistrationFile" asp-controller="Master" asp-route-id=@item.Id><span><i class="far fa-edit mr-3 fa-1x icon-color-green"></i></span></a>
										}
										@if ((await authorizationService.AuthorizeAsync(User, "DeleteRegistrationPolicy")).Succeeded)
										{
											<a asp-action="DeleteRegistrationRecord" asp-controller="Master" asp-route-id=@item.Id onclick="return confirm ('Are you sure you want to delete record : @(item.Id + " Ref.No. " + item.RefNo)')"><i class="fas fa-times fa-1x icon-color-red"></i></a>
										}
									</td>
									<td>
										@userManager.Users.Where(x => x.Id == item.UserCode).Select(x => x.UserName.Substring(0, 8).ToUpper()).FirstOrDefault()
									</td>
									<td>
										@item.TitleName  @item.Name @((int)item.Age) @item.AgeType @item.Sex
									</td>
									<td>
										@item.DrName
									</td>
									<td>
										@item.TestDetailRecord
									</td>
									<td class="text-right">
										@item.TotalAmt
									</td>
									<td class="text-right">
										@item.DiscAmt
									</td>
									<td class="text-right">
										@item.PaidAmt
									</td>
									<td class="text-right">
										@item.BalAmt
									</td>
									<td>
										<div class="input-group">
											@if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
											{
												<input type="checkbox" class="form-control  wdp-5" style="height:15px;" id="Item_Status_@item.Id" name="Item_Status_@item.Id" checked="@(item.ReportCancel == "True" ? true : false)" onclick="checkValues(@item.Id);" />
											}
											else
											{
												if ((await authorizationService.AuthorizeAsync(User, "PatientRegistrationCancelPolicy")).Succeeded)
												{
													<input type="checkbox" class="form-control  wdp-5" style="height:15px;" id="Item_Status_@item.Id" name="Item_Status_@item.Id" checked="@(item.ReportCancel == "True" ? true : false)" onclick="checkValues(@item.Id);" />
												}
												else
												{
													<input type="checkbox" class="form-control  wdp-5" style="height:15px;" id="Item_Status_@item.Id" name="Item_Status_@item.Id" checked="@(item.ReportCancel == "True" ? true : false)" onclick="checkValues(@item.Id);" disabled />
												}
											}
											</div>
									</td>
									
								</tr>
							}
						}
						else
						{
							<tr>
								<td colspan="15">
									@if (Model.SearchRecordFinder == "Yes")
									{
										<h3 class="text-danger text-center">No Record found......</h3>
									}
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
			<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 bg-white">
				<div class="form-group row text-right">
					<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
						<h5 class="text-danger">Total Patient :- @detailViewModelsx.Count()</h5>
					</div>
					<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">
						<h5 id="TotalAmtPatient" class="text-warning"> Total Amt . @totalamt</h5>
					</div>
					<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
						<h5 id="DiscAmtPatient" class="text-danger"> Disc Amt. @discamt</h5>
					</div>
					<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">
						<h5 id="PaidAmtPaient" class="text-success"> Paid Amt. @paidamt</h5>
					</div>
					<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">
						<h5 id="BalAmtPatient" class="text-danger"> Bal Amt. @balamt</h5>
					</div>
				</div>
			</div>
		</div>
	</div>
	
}

@section scripts{
	<environment include="Development">
		<script src="~/js/PatientRecordFind.js" asp-append-version="true"></script>
	</environment>
	<environment exclude="Development">
		<script src="~/js/PatientRecordFind.min.js" asp-append-version="true"></script>
	</environment>
	<script>
		$('#DoctorTable1').height(screen.height - 320);
		
				//$('#TestReportTable1').height(screen.height - 520)-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	</script>
	
	<script>
						//$(document).ready(function () {
						//	MonthlyRecord();
						//	WeeklyRecord();
						//	var today = new Date();
						//	document.getElementById("FromDt1").value = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);
						//	document.getElementById("UptoDt1").value = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);
						//});
						//function WeeklyRecord() {
						//	$.ajax({
						//		type: 'GET',
						//		dataType: "json",
						//		contentType: "application/json",
						//		url: '/Home/ChartListWeekly',
						//		data: { dateTime: $('#CurrentDate').val() },
						//		success: function (result) {
						//			google.charts.load('current', {
						//				'packages': ['corechart']
						//			});
						//			google.charts.setOnLoadCallback(function () {
						//				drawChartWeekly(result);
						//			});
						//		}
						//	});
						//}
						//function drawChartWeekly(result) {
						//	var data = new google.visualization.DataTable();
						//	data.addColumn('string', "Dr. Id");
						//	data.addColumn('number', "Total Patient");
						//	var dataArray = [];
						//	$.each(result, function (i, obj) {
						//		dataArray.push([obj.emailAddress, obj.paidAmt]);
						//	});
						//	data.addRows(dataArray);
						//	// Optional; add a title and set the width and height of the chart
						//	var piechart_options = {
						//		//'title': 'Branch Wise Client',
						//		'is3D': true
						//		//'width': 650,
						//		//'height': 400
						//	};
						//	// Display the chart inside the <div> element with id="piechart"
						//	var piechart = new google.visualization.AreaChart(document.getElementById('piechart_div'));
						//	piechart.draw(data, piechart_options);
						//}
						//function drawChartMonthly(result) {
						//	var data = new google.visualization.DataTable();
						//	data.addColumn('string', "Dr. Id");
						//	data.addColumn('number', "Total Patient");
						//	var dataArray = [];
						//	$.each(result, function (i, obj) {
						//		dataArray.push([obj.emailAddress, obj.paidAmt]);
						//	});
						//	data.addRows(dataArray);
						//	// Optional; add a title and set the width and height of the chart
						//	var piechart_options = {
						//		//'title': 'Branch Wise Client',
						//		'is3D': true
						//		//'width': 650,
						//		//'height': 400
						//	};
						//	// Display the chart inside the <div> element with id="piechart"
						//	var piechart = new google.visualization.ColumnChart(document.getElementById('piechart_div1'));
						//	piechart.draw(data, piechart_options);
						//}
						//function MonthlyRecord() {
						//	$.ajax({
						//		type: 'GET',
						//		dataType: "json",
						//		contentType: "application/json",
						//		url: '/Home/ChartListMonthly',
						//		data: { dateTime: $('#CurrentDate').val() },
						//		success: function (result) {
						//			google.charts.load('current', {
						//				'packages': ['corechart']
						//			});
						//			google.charts.setOnLoadCallback(function () {
						//				drawChartMonthly(result);
						//			});
						//		}
						//	});
						//}
	</script>

}