@model TestDocMasterViewModel
@inject IMasterRepository _mrepository;
@inject ISettingRepository _repository;
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> userManager;
@inject Microsoft.Extensions.Options.IOptionsSnapshot<SoftwareConfigMode> softwareoption;
@inject IAuthorizationService authorizationService;
@{
	ViewData["Title"] = "Create Test Document File";
	string submitValue = Model.Id > 0 ? "Update" : "Save";
	var softwareheader = softwareoption.Value;
	List<TestDocMasterViewModel> areaFile = await _mrepository.GetAllTestDocMaster(softwareheader.SoftwareMode == true ? (int)(await userManager.GetUserAsync(User)).CompanyDetailId : 1);   
}

<div class="CustomBorderRelative">
	<div class="CustomBorder1">
		<h4 class="text-center text-white HeadingColorGreen">Create Test Document File</h4>
		<form asp-action="CreateTestDocFile" asp-controller="Master" method="post">
			<input asp-for="Id" class="form-control" hidden  />
			<input asp-for="CompId" class="form-control " value="@(softwareheader.SoftwareMode == true ? (int)(await userManager.GetUserAsync(User)).CompanyDetailId : 1)" hidden />
			<div class="form-row">
				<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center">
					<div asp-validation-summary="All" class="text-danger row-cols-12 anyScrollCompany">
						<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
							@if (ViewBag.isSuccess == true)
							{
								<div class="alert alert-success alert-dismissible fade show" role="alert">
									<strong>@ViewBag.message </strong>
									<button type="button" class="close" data-dismiss="alert" aria-label="Close">
										<span aria-hidden="true">&times;</span>
									</button>
								</div>
							}
						</div>
					</div>
				</div>
				<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
					<div class="form-group row">
						<label asp-for="TestCode" class="col-12 col-sm-12 col-md-1 col-lg-1 col-xl-1  control-label"></label>
						<div class="col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6"><input asp-for="TestCode" class="form-control " /></div>

						<label asp-for="TestGroupId" class="col-12 col-sm-12 col-md-2 col-lg-2 col-xl-2  "></label>
						<div class="col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3">
							<select asp-for="TestGroupId" asp-items=" (await _mrepository.GetAllTestGroupMaster(softwareheader.SoftwareMode == true ? (int)(await userManager.GetUserAsync(User)).CompanyDetailId : 1)).OrderBy(x=> x.Name).Select(x=> new SelectListItem() { Text = x.Name, Value = x.Id.ToString() })" class="form-control   selectedItems ">
							</select>
						</div>
					</div>
				</div>				
				<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
					<div class="form-group row">
						<label asp-for="documentFile" class="col-12 col-sm-12 col-md-1 col-lg-1 col-xl-1  "></label>
						<div class="col-12 col-sm-12 col-md-11 col-lg-11 col-xl-11 bg-white">
							<textarea asp-for="documentFile" class="form-control  CustomText PageDocumentContainerDetails" rows="8"></textarea>
						</div>
					</div>
				</div>
				
				<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
					<div class="form-group row">
						<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
							<select id="testgidX" asp-items=" (await _mrepository.GetAllTestGroupMaster(softwareheader.SoftwareMode == true ? (int)(await userManager.GetUserAsync(User)).CompanyDetailId : 1)).OrderBy(x=> x.Name).Select(x=> new SelectListItem() { Text = x.Name, Value = x.Id.ToString() })" class="form-control   selectedItems " onkeypress="SearchTestDocFile()">
							</select>
						</div>
						<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">
							<input id="NameX" class="form-control " placeholder="Search Test File Name" onkeypress="SearchTestDocFile()" />
						</div>
						<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 text-right">
							<input type="submit" value="@submitValue" class="btn btn-success btn-sm" id="submit" hidden />
							<a href="#" class="btn btn-success  btn-sm" id="btn-confirm">@submitValue</a>
							<a asp-action="CreateTestDocFile" asp-controller="Master" asp-route-id="0" asp-route-isSuccess="false" class="btn btn-warning btn-sm" style="width:auto;">Add New</a>
							<a asp-action="Index" asp-controller="Home" class="btn btn-outline-info btn-sm">Cancel</a>
						</div>
					</div>
				</div>

			</div>
		</form>

		<div class="stateScroll" id="DistrictTable1">
			<table class="table  table-striped table-bordered table-hover table-responsive-sm CancelTagVouch">
				<thead class="text-dark">
					<tr>
						<th hidden>
							Id
						</th>
						<th style="width:5%">
							No
						</th>
						<th>
							File's Name
						</th>
						<th>
							Group's Name
						</th>
						<th class="actionListButtonWidthGrade">
							Action
						</th>
					</tr>
				</thead>
				<tbody class="tbodyitemgroup">
					@if (areaFile.Count() > 0)
					{
						int countno = 0;
						@foreach (var item in areaFile)
						{
							countno++;
							<tr>
								<td hidden>
									@item.Id
								</td>
								<td>
									@countno
								</td>
								<td>
									@item.TestCode
								</td>
								<td>
									@item.TestGroupMasterViewModel.Name
								</td>							
								<td class="text-center">
									@if ((await authorizationService.AuthorizeAsync(User, "AddEditTestDocPolicy")).Succeeded)
									{
										<a asp-action="CreateTestDocFile" asp-controller="Master" asp-route-id=@item.Id><span><i class="far fa-edit mr-3 fa-1x icon-color-green"></i></span></a>
									}
									@if ((await authorizationService.AuthorizeAsync(User, "DeleteTestDocPolicy")).Succeeded)
									{
										<a asp-action="DeleteTestDocRecord" asp-controller="Master" asp-route-id=@item.Id onclick="return confirm ('Are you sure you want to delete record : @item.Id')"><i class="fas fa-times fa-1x icon-color-red"></i></a>
									}
									</td>
							</tr>
						}
					}
					else
					{
						<tr>
							<td colspan="5">
								<h3 class="text-danger text-center">No Record found......</h3>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
</div>
@section scripts {
	<script>
		$(document).ready(function () {
			$('#TestCode').focus();
			$('.PageDocumentContainerDetails').summernote({
				toolbar: [
					['style', ['style']],
					['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
					['fontsize', ['fontsize']],
					['fontname', ['fontname']],
					['color', ['color']],
					['para', ['ul', 'ol', 'paragraph']],					
					['table', ['table']],
					['insert', ['link', 'picture', 'video']],
					['view', ['fullscreen', 'codeview', 'help']],
				],
				fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Helvetica', 'Impact', 'Tahoma', 'Times New Roman', 'Verdana', 'Roboto', 'Yu Gothic'],
				fontSizes: ['8', '9', '10', '11', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34', '36'],				
				height: 300
			});
		});
		$('#DistrictTable1').height(screen.height - 610);
		function SearchTestDocFile() {
			var empobj = {
				CompId: $('#CompId').val(),
				NameX: $('#NameX').val(),
				testgidX: $('#testgidX').val()
			}
			$.ajax({
				url: "/Master/GetSearchTestDocFile/",
				method: "GET",
				dataType: "json",
				data: empobj,
				contentType: "application/json",
				success: function (result) {
					var html = '';
					$.each(result, function (key, item) {
						html += '<tr class="small">';
						html += '<td class="wdp-5" >' + item.id + '</td>';
						html += '<td>' + item.testCode + '</td>';
						html += '<td>' + item.testGroupMasterViewModel.name + '</td>';
						html += '<td class="text-center">' +
							'<a href="TestDoc-File?id=' + item.id + '"' + '<span><i class="far fa-edit mr-3 fa-2x icon-color-green"></i></span></a>' +
							'</td >';
						html += '</tr>';
					});
					$('.tbodyitemgroup').html(html);
					// '<a href="AddressBook-Delete-File?id=' + item.ledgerMasterId + '"' +  '<span><i class="fas fa-times fa-2x icon-color-red"></i></span></a>' +
				},
				error: function (errormessage) {
					console.error(errormessage.responseText);
				}
			});
			return false;
		}
	</script>
}